#!/usr/local/bin/expect
# -*-C++-*- loc-22-1-1-1-2.exp -- C++ is actually a lie but it helps
# -------------------------------------------------------------------------- 
# Copyright (c) 2002 Dietmar Kuehl

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# -------------------------------------------------------------------------- 
# Author: Dietmar Kuehl <http://www.dietmar-kuehl.de/>
# Title:  Class locale::facet
# Version: $Id: loc-22-1-1-1-2.exp,v 1.1.1.1 2002/06/05 01:02:57 dietmar_kuehl Exp $
# -------------------------------------------------------------------------- 

inline_compile {
  #include <iostream>
  #include <locale>
  #include <cstdlib>
  #if !defined(_CXXRT_STD_NAME)
  #  define STD std::
  #else
  #  define STD _CXXRT_STD_NAME::
  #endif

  class facet: public STD locale::facet
  {
  public:
    static STD locale::id id;

    facet(): STD locale::facet(), refs(0) {}
    explicit facet(STD size_t r): STD locale::facet(r), refs(r) {}
    ~facet() { STD cout << "dtor: " << static_cast<int>(refs) << "\n"; }

  private:
    STD size_t refs;
  };

  STD locale::id facet::id;

  int main(int, char *[])
  {
    STD locale l;
    STD locale l1(l, new facet);
    STD locale l2(l, new facet(1));

    return 0;
  }
}

simple_test "locale::facet refcount" "" {
dtor: 0
}
