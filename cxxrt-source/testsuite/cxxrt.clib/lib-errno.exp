#!/usr/local/bin/expect
# -*-C++-*- lib-errno.exp -- C++ is actually a lie but it helps
# -------------------------------------------------------------------------- 
# Copyright (c) 2002 Dietmar Kuehl

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# -------------------------------------------------------------------------- 
# Author: Dietmar Kuehl <http://www.dietmar-kuehl.de/>
# Title:  errno 
# Version: $Id: lib-errno.exp,v 1.1.1.1 2002/06/05 01:03:49 dietmar_kuehl Exp $ 
# -------------------------------------------------------------------------- 

inline_compile {
  #include "testtools.hpp"
  #include <iostream>
  #include <cerrno>

  #if defined(_CRTSTD)
  #  define STD _CRTSTD
  #else
  #  define CSTD ::std::
  #endif
  #if defined(_CXXRT_STD)
  #  define STD _CXXRT_STD
  #else
  #  define STD ::std::
  #endif

  #if !defined(EDOM)
  #  error "EDOM not defined in cerrno"
  #endif
  #if !defined(EILSEQ)
  #  error "EILSEQ not defined in cerrno"
  #endif
  #if !defined(ERANGE)
  #  error "ERANGE not defined in cerrno"
  #endif

  int main()
  {
    check_fct_type<int>(EDOM);
    check_fct_type<int>(EILSEQ);
    check_fct_type<int>(ERANGE);
    check_type<int>(errno);

    try
      {
	if (errno != 0)
	  throw "wrong initial value for errno\n";

	errno = 17;
	if (errno != 17)
	  throw "wrong value after change\n";

	STD cout << "OK\n";
      }
    catch (char const* msg)
      {
	STD cout << msg << "\n";
      }
    
    return 0;
  }
}

simple_test "errno" "" {
OK
}
