#!/usr/local/bin/expect
# -*-C++-*- io-27-4-2-1-3.exp -- C++ is actually a lie but it helps
# -------------------------------------------------------------------------- 
# Copyright (c) 2002 Dietmar Kuehl

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# -------------------------------------------------------------------------- 
# Author: Dietmar Kuehl <http://www.dietmar-kuehl.de/>
# Title:  Type ios_base::iostate
# Version: $Id: lib-ios-iostate.exp,v 1.1.1.1 2002/06/05 01:03:00 dietmar_kuehl Exp $
# -------------------------------------------------------------------------- 

inline_compile {
  #include <ios>
  #include <cstdio>
  #include <testio.hpp>

  int main()
  {
    STD ios_base::iostate s1 = STD ios_base::goodbit;
    STD ios_base::iostate s2 = STD ios_base::badbit;
    STD ios_base::iostate s3 = STD ios_base::eofbit;
    STD ios_base::iostate s4 = STD ios_base::failbit;

    if (s1 == (STD ios_base::iostate(0)))
      {
        char const msg_ok[] = "ios_base::iostate OK\n";
        write(msg_ok);
      }

    s1 = ~s2;
    s1 |= s2;
    s1 = s2 | s3;
    s1 &= s2;
    s1 = s2 & s3;
    s1 ^= s2;
    s1 = s2 ^ s4;

    return 0;
  }
}

simple_test "ios_base::iostate" "" {
ios_base::iostate OK
}
