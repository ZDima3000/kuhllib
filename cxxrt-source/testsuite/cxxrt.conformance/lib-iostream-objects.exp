#!/usr/local/bin/expect
# -*-C++-*- io-27-3-0.exp -- C++ is actually a lie but it helps
# -------------------------------------------------------------------------- 
# Copyright (c) 2002 Dietmar Kuehl

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# -------------------------------------------------------------------------- 
# Author: Dietmar Kuehl <http://www.dietmar-kuehl.de/>
# Title:  Standard iostream objects 
# Version: $Id: lib-iostream-objects.exp,v 1.1.1.1 2002/06/05 01:03:36 dietmar_kuehl Exp $
# -------------------------------------------------------------------------- 

inline_compile {
  #include <iostream>
  #if !defined(_CXXRT_STD)
  #  define STD std::
  #else
  #  define STD _CXXRT_STD
  #endif

  template <class T> void check_ref_type(T) {}

  int main()
  {
    check_ref_type< STD istream &>(STD cin);
    check_ref_type< STD ostream &>(STD cout);
    check_ref_type< STD ostream &>(STD cerr);
    check_ref_type< STD ostream &>(STD clog);

    check_ref_type< STD wistream &>(STD wcin);
    check_ref_type< STD wostream &>(STD wcout);
    check_ref_type< STD wostream &>(STD wcerr);
    check_ref_type< STD wostream &>(STD wclog);

    return 0;
  }
}
