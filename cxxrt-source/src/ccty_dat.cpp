//-*-C++-*- ccty_dat.cc
// Do not edit this file! It is generated by locconfig.
// Use this program if you need to adapt this file.

#include <cxxrtcf.h>
#include <cwchar>
#include <cxxrt/c_locale.h>

_Locale_mask_t _CS_char_mask[257] =
{
  0x000,  // EOF
  0x004,  // NU NUL
  0x004,  // SH SOH
  0x004,  // STX SX
  0x004,  // ETX EX
  0x004,  // EOT ET
  0x004,  // ENQ EQ
  0x004,  // ACK AK
  0x004,  // BEL BL alert
  0x004,  // BS backspace
  0x207,  // HT tab
  0x005,  // LF newline
  0x005,  // VT vertical-tab
  0x005,  // FF form-feed
  0x005,  // CR carriage-return
  0x004,  // SO
  0x004,  // SI
  0x004,  // DL DLE
  0x004,  // D1 DC1
  0x004,  // D2 DC2
  0x004,  // D3 DC3
  0x004,  // D4 DC4
  0x004,  // NAK NK
  0x004,  // SY SYN
  0x004,  // EB ETB
  0x004,  // CAN CN
  0x004,  // EM
  0x004,  // SB SUB
  0x004,  // EC ESC
  0x004,  // FS IS4
  0x004,  // GS IS3 intro
  0x004,  // IS2 RS
  0x004,  // IS1 US
  0x203,  // SP space
  0x082,  // ! exclamation-mark
  0x082,  // " quotation-mark
  0x082,  // Nb number-sign
  0x082,  // DO dollar-sign
  0x082,  // % percent-sign
  0x082,  // & ampersand
  0x082,  // ' apostrophe
  0x082,  // ( left-parenthesis
  0x082,  // ) right-parenthesis
  0x082,  // * asterisk
  0x082,  // + plus-sign
  0x082,  // , comma
  0x082,  // - hyphen hyphen-minus
  0x082,  // . full-stop period
  0x082,  // // slash solidus
  0x142,  // 0 zero
  0x142,  // 1 one
  0x142,  // 2 two
  0x142,  // 3 three
  0x142,  // 4 four
  0x142,  // 5 five
  0x142,  // 6 six
  0x142,  // 7 seven
  0x142,  // 8 eight
  0x142,  // 9 nine
  0x082,  // : colon
  0x082,  // ; semicolon
  0x082,  // < less-than-sign
  0x082,  // = equals-sign
  0x082,  // /> greater-than-sign
  0x082,  // ? question-mark
  0x082,  // At commercial-at
  0x12a,  // A
  0x12a,  // B
  0x12a,  // C
  0x12a,  // D
  0x12a,  // E
  0x12a,  // F
  0x02a,  // G
  0x02a,  // H
  0x02a,  // I
  0x02a,  // J
  0x02a,  // K
  0x02a,  // L
  0x02a,  // M
  0x02a,  // N
  0x02a,  // O
  0x02a,  // P
  0x02a,  // Q
  0x02a,  // R
  0x02a,  // S
  0x02a,  // T
  0x02a,  // U
  0x02a,  // V
  0x02a,  // W
  0x02a,  // X
  0x02a,  // Y
  0x02a,  // Z
  0x082,  // <( left-square-bracket
  0x082,  // //// backslash reverse-solidus
  0x082,  // )/> right-square-bracket
  0x082,  // '/> circumflex circumflex-accent
  0x082,  // _ low-line underscore
  0x082,  // '! grave-accent
  0x132,  // a
  0x132,  // b
  0x132,  // c
  0x132,  // d
  0x132,  // e
  0x132,  // f
  0x032,  // g
  0x032,  // h
  0x032,  // i
  0x032,  // j
  0x032,  // k
  0x032,  // l
  0x032,  // m
  0x032,  // n
  0x032,  // o
  0x032,  // p
  0x032,  // q
  0x032,  // r
  0x032,  // s
  0x032,  // t
  0x032,  // u
  0x032,  // v
  0x032,  // w
  0x032,  // x
  0x032,  // y
  0x032,  // z
  0x082,  // (! left-brace left-curly-bracket
  0x082,  // !! vertical-line
  0x082,  // !) right-brace right-curly-bracket
  0x082,  // '? tilde
  0x004,  // DEL DT
  0x000,  // PA
  0x000,  // HO
  0x000,  // BH
  0x000,  // NH
  0x000,  // IN
  0x000,  // NL
  0x000,  // SA
  0x000,  // ES
  0x000,  // HS
  0x000,  // HJ
  0x000,  // VS
  0x000,  // PD
  0x000,  // PU
  0x000,  // RI
  0x000,  // S2
  0x000,  // S3
  0x000,  // DC
  0x000,  // P1
  0x000,  // P2
  0x000,  // TS
  0x000,  // CC
  0x000,  // MW
  0x000,  // SG
  0x000,  // EG
  0x000,  // SS
  0x000,  // GC
  0x000,  // SC
  0x000,  // CI
  0x000,  // ST
  0x000,  // OC
  0x000,  // PM
  0x000,  // AC
  0x000,  // NS
  0x000,  // !I
  0x000,  // Ct
  0x000,  // Pd
  0x000,  // Cu
  0x000,  // Ye
  0x000,  // BB
  0x000,  // SE
  0x000,  // ':
  0x000,  // Co
  0x000,  // -a
  0x000,  // <<
  0x000,  // NO
  0x000,  // --
  0x000,  // Rg
  0x000,  // 'm
  0x000,  // DG
  0x000,  // +-
  0x000,  // 2S
  0x000,  // 3S
  0x000,  // ''
  0x000,  // My
  0x000,  // PI
  0x000,  // .M
  0x000,  // ',
  0x000,  // 1S
  0x000,  // -o
  0x000,  // />/>
  0x000,  // 14
  0x000,  // 12
  0x000,  // 34
  0x000,  // ?I
  0x000,  // A!
  0x000,  // A'
  0x000,  // A/>
  0x000,  // A?
  0x000,  // A:
  0x000,  // AA
  0x000,  // AE
  0x000,  // C,
  0x000,  // E!
  0x000,  // E'
  0x000,  // E/>
  0x000,  // E:
  0x000,  // I!
  0x000,  // I'
  0x000,  // I/>
  0x000,  // I:
  0x000,  // D-
  0x000,  // N?
  0x000,  // O!
  0x000,  // O'
  0x000,  // O/>
  0x000,  // O?
  0x000,  // O:
  0x000,  // *X
  0x000,  // O//
  0x000,  // U!
  0x000,  // U'
  0x000,  // U/>
  0x000,  // U:
  0x000,  // Y'
  0x000,  // TH
  0x000,  // ss
  0x000,  // a!
  0x000,  // a'
  0x000,  // a/>
  0x000,  // a?
  0x000,  // a:
  0x000,  // aa
  0x000,  // ae
  0x000,  // c,
  0x000,  // e!
  0x000,  // e'
  0x000,  // e/>
  0x000,  // e:
  0x000,  // i!
  0x000,  // i'
  0x000,  // i/>
  0x000,  // i:
  0x000,  // d-
  0x000,  // n?
  0x000,  // o!
  0x000,  // o'
  0x000,  // o/>
  0x000,  // o?
  0x000,  // o:
  0x000,  // -:
  0x000,  // o//
  0x000,  // u!
  0x000,  // u'
  0x000,  // u/>
  0x000,  // u:
  0x000,  // y'
  0x000,  // th
  0x000,  // y:
};

char _CS_tolower[256] =
{
     0,
     1,
     2,
     3,
     4,
     5,
     6,
     7,
     8,
     9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    97, // A -> a
    98, // B -> b
    99, // C -> c
   100, // D -> d
   101, // E -> e
   102, // F -> f
   103, // G -> g
   104, // H -> h
   105, // I -> i
   106, // J -> j
   107, // K -> k
   108, // L -> l
   109, // M -> m
   110, // N -> n
   111, // O -> o
   112, // P -> p
   113, // Q -> q
   114, // R -> r
   115, // S -> s
   116, // T -> t
   117, // U -> u
   118, // V -> v
   119, // W -> w
   120, // X -> x
   121, // Y -> y
   122, // Z -> z
    91,
    92,
    93,
    94,
    95,
    96,
    97,
    98,
    99,
   100,
   101,
   102,
   103,
   104,
   105,
   106,
   107,
   108,
   109,
   110,
   111,
   112,
   113,
   114,
   115,
   116,
   117,
   118,
   119,
   120,
   121,
   122,
   123,
   124,
   125,
   126,
   127,
  -128,
  -127,
  -126,
  -125,
  -124,
  -123,
  -122,
  -121,
  -120,
  -119,
  -118,
  -117,
  -116,
  -115,
  -114,
  -113,
  -112,
  -111,
  -110,
  -109,
  -108,
  -107,
  -106,
  -105,
  -104,
  -103,
  -102,
  -101,
  -100,
   -99,
   -98,
   -97,
   -96,
   -95,
   -94,
   -93,
   -92,
   -91,
   -90,
   -89,
   -88,
   -87,
   -86,
   -85,
   -84,
   -83,
   -82,
   -81,
   -80,
   -79,
   -78,
   -77,
   -76,
   -75,
   -74,
   -73,
   -72,
   -71,
   -70,
   -69,
   -68,
   -67,
   -66,
   -65,
   -64,
   -63,
   -62,
   -61,
   -60,
   -59,
   -58,
   -57,
   -56,
   -55,
   -54,
   -53,
   -52,
   -51,
   -50,
   -49,
   -48,
   -47,
   -46,
   -45,
   -44,
   -43,
   -42,
   -41,
   -40,
   -39,
   -38,
   -37,
   -36,
   -35,
   -34,
   -33,
   -32,
   -31,
   -30,
   -29,
   -28,
   -27,
   -26,
   -25,
   -24,
   -23,
   -22,
   -21,
   -20,
   -19,
   -18,
   -17,
   -16,
   -15,
   -14,
   -13,
   -12,
   -11,
   -10,
    -9,
    -8,
    -7,
    -6,
    -5,
    -4,
    -3,
    -2,
    -1,
};

char _CS_toupper[256] =
{
     0,
     1,
     2,
     3,
     4,
     5,
     6,
     7,
     8,
     9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    90,
    91,
    92,
    93,
    94,
    95,
    96,
    65, // a -> A
    66, // b -> B
    67, // c -> C
    68, // d -> D
    69, // e -> E
    70, // f -> F
    71, // g -> G
    72, // h -> H
    73, // i -> I
    74, // j -> J
    75, // k -> K
    76, // l -> L
    77, // m -> M
    78, // n -> N
    79, // o -> O
    80, // p -> P
    81, // q -> Q
    82, // r -> R
    83, // s -> S
    84, // t -> T
    85, // u -> U
    86, // v -> V
    87, // w -> W
    88, // x -> X
    89, // y -> Y
    90, // z -> Z
   123,
   124,
   125,
   126,
   127,
  -128,
  -127,
  -126,
  -125,
  -124,
  -123,
  -122,
  -121,
  -120,
  -119,
  -118,
  -117,
  -116,
  -115,
  -114,
  -113,
  -112,
  -111,
  -110,
  -109,
  -108,
  -107,
  -106,
  -105,
  -104,
  -103,
  -102,
  -101,
  -100,
   -99,
   -98,
   -97,
   -96,
   -95,
   -94,
   -93,
   -92,
   -91,
   -90,
   -89,
   -88,
   -87,
   -86,
   -85,
   -84,
   -83,
   -82,
   -81,
   -80,
   -79,
   -78,
   -77,
   -76,
   -75,
   -74,
   -73,
   -72,
   -71,
   -70,
   -69,
   -68,
   -67,
   -66,
   -65,
   -64,
   -63,
   -62,
   -61,
   -60,
   -59,
   -58,
   -57,
   -56,
   -55,
   -54,
   -53,
   -52,
   -51,
   -50,
   -49,
   -48,
   -47,
   -46,
   -45,
   -44,
   -43,
   -42,
   -41,
   -40,
   -39,
   -38,
   -37,
   -36,
   -35,
   -34,
   -33,
   -32,
   -31,
   -30,
   -29,
   -28,
   -27,
   -26,
   -25,
   -24,
   -23,
   -22,
   -21,
   -20,
   -19,
   -18,
   -17,
   -16,
   -15,
   -14,
   -13,
   -12,
   -11,
   -10,
    -9,
    -8,
    -7,
    -6,
    -5,
    -4,
    -3,
    -2,
    -1,
};

