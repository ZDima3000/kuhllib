#!/usr/local/bin/perl
# -*-C++-*- numpunc1.exp -- C++ is actually a lie but it helps
# -------------------------------------------------------------------------- 
# Copyright (c) 2002 Dietmar Kuehl

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject
# to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# -------------------------------------------------------------------------- 
# Author: Dietmar Kuehl <http://www.dietmar-kuehl.de/>
# Title:   
# Version: $Id: numpunc1.exp,v 1.1.1.1 2002/06/05 01:03:46 dietmar_kuehl Exp $
# -------------------------------------------------------------------------- 

inline_compile {
  #include <cstdlib>
  #include <locale>
  #include <iostream>
  #include <string>

  #if !defined(_CXXRT_STD_NAME)
  #  define STD std::
  #else
  #  define STD _CXXRT_STD_NAME::
  #endif

  int main()
  {
    typedef STD numpunct<char> NP;
    STD locale l;

    if (STD has_facet<NP>(l))
      {
        STD cout << "dp:        >" << STD use_facet<NP>(l).decimal_point() << "<\n";
        STD cout << "ts:        >" << STD use_facet<NP>(l).thousands_sep() << "<\n";
        STD cout << "grouping:  >" << STD use_facet<NP>(l).grouping().c_str() << "<\n";
        STD cout << "truename:  >" << STD use_facet<NP>(l).truename().c_str() << "<\n";
        STD cout << "falsename: >" << STD use_facet<NP>(l).falsename().c_str() << "<\n";
      }
    else
      {
        STD cout << "numpunct<char> not found in locale!\n";
        return 1;
      }

    return 0;
  }
}

simple_test "numpunct<char>" "" {
dp:        >.<
ts:        >,<
grouping:  ><
truename:  >true<
falsename: >false<
}
